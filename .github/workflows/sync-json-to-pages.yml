name: Build JSON to gh-pages

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"  # daily 03:00 UTC

permissions:
  contents: write

jobs:
  build-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          path: gh-pages

      - name: Checkout master (code)
        uses: actions/checkout@v5
        with:
          ref: master
          path: master

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install deps
        working-directory: master
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build JSON files into gh-pages
        run: |
          python master/src/fetch_device_data.py --scores-output gh-pages/devices_with_scores.json --generate-rubric --rubric-output gh-pages/rubric.json

      - name: Commit to gh-pages if changed
        working-directory: gh-pages
        run: |
          set -e
          # List of files to check
          files=("devices_with_scores.json" "rubric.json" "french_devices_with_scores.json")
          
          # Stage all files
          git add "${files[@]}" || { echo "Error staging files"; exit 1; }
          
          # Check for changes and collect modified files
          modified_files=()
          for file in "${files[@]}"; do
            if ! git diff --cached --quiet -- "$file" 2>/dev/null; then
              modified_files+=("$file")
            fi
          done
          
          # Commit and push if there are changes
          if [ ${#modified_files[@]} -gt 0 ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
            # Construct commit message dynamically
            if [ ${#modified_files[@]} -eq 1 ]; then
              commit_msg="chore(gh-pages): update ${modified_files[0]} $ts"
            else
              # Join file names with commas for readability
              commit_msg="chore(gh-pages): update $(IFS=', '; echo "${modified_files[*]}") $ts"
            fi
          
            git commit -m "$commit_msg" || { echo "Commit failed"; exit 1; }
            git push || { echo "Push failed"; exit 1; }
          else
            echo "No changes to commit."
          fi
